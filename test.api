
syntax = "v1"
info(
    title: "Music Library API"
    version: "1.0"
)

host("localhost:8080")


type (
	// Запрос для добавления песни
	AddSongRequest {
		Group string `json:"group"` // Имя группы
		Song  string `json:"song"`  // Название песни
	}

	// Ответ на действия с песнями
	SongActionResponse {
		Message string `json:"message"` // Результат операции
	}

	// Запрос для фильтрации и пагинации списка песен
	SongFilterRequest {
		Group       string `form:"group"`        // Фильтрация по имени группы
		Song        string `form:"song"`         // Фильтрация по названию песни
		Page        int64  `form:"page"`         // Номер страницы
		Limit       int64  `form:"limit"`        // Размер страницы
		ReleaseDate string `form:"release_date"` //
	}

	// Ответ со списком песен
	SongListResponse {
		Songs []Song `json:"songs"` // Список песен
		Total int64  `json:"total"` // Общее количество записей
	}

	// Текст куплетов песни с пагинацией
	SongVersesRequest {
		Song_id     int64 `form:"song_id"` // ID песни
		VerseNumber int   `json:"verse_number"`
	}

	// Ответ с куплетами песни
	SongVersesResponse {
		Verses []SongVerse `json:"verses"` // Куплеты
	}

	// Модель песни
	Song {
		Id          int64  `json:"id"`          // Уникальный идентификатор
		Group       string `json:"group"`       // Имя группы
		Song        string `json:"song"`        // Название песни
		ReleaseDate string `json:"releaseDate"` // Дата релиза
		Link        string `json:"link"`        // Ссылка на источник
		Text        string `json:"text"`        // Ссылка на источник
	}

	// Модель куплета песни
	SongVerse {
		Verse_number int64  `json:"verse_number"` // Номер куплета
		Verse_text   string `json:"verse_text"`   // Текст куплета
	}
)

service musicLibrary-api {
	@doc(
		summary: Получить список песен
		description: Возвращает список песен с возможностью фильтрации по имени группы и названию песни. Поддерживается пагинация.
	)
	@handler ListSongsHandler
	get /songs(SongFilterRequest) returns (SongListResponse)
	
	@doc(
		summary: Получить текст куплетов песни
		description: Возвращает текст куплетов песни с пагинацией.
	)
	@handler GetSongVersesHandler
	get /songs/:id/verses(SongVersesRequest) returns (SongVersesResponse)
	
	@doc(
		summary: Добавить новую песню
		description: Добавляет новую песню с указанием имени группы и названия песни. Выполняется запрос к внешнему API для получения дополнительной информации.
	)
	@handler AddSongHandler
	post /songs(AddSongRequest) returns (SongActionResponse)
	
	@doc(
		summary: Изменить данные песни
		description: Обновляет информацию о песне по её идентификатору.
	)
	@handler UpdateSongHandler
	put /songs/:id(Song) returns (SongActionResponse)
	
	@doc(
		summary: Удалить песню
		description: Удаляет песню из библиотеки по её идентификатору.
	)
	@handler DeleteSongHandler
	delete /songs/:id returns (SongActionResponse)
}