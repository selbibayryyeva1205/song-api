syntax = "v1"

type (
    AddSongRequest {
        Group string `json:"group"`
        Song  string `json:"song"`
    }

    SongActionResponse {
        Message string `json:"message"`
    }

    SongFilterRequest {
        Group string `form:"group"`
        Song  string `form:"song"`
        Page  int64  `form:"page"`
        Limit int64  `form:"limit"`
    }

    SongListResponse {
        Songs []Song `json:"songs"`
        Total int64   `json:"total"`
    }

    SongVersesRequest {
        SongId      int64 `form:"song_id"`
        VerseNumber int   `form:"verse_number"`
    }

    SongDeleteRequest {
        SongId int64 `form:"song_id"`
    }

    SongVersesResponse {
        Id          int64  `json:"id"`
        Group       string `json:"group"`
        Song        string `json:"song"`
        ReleaseDate string `json:"releaseDate"`
        Link        string `json:"link"`
        Text        string `json:"text"`
    }

    Song {
        Id          int64  `json:"id"`
        Group       string `json:"group"`
        Song        string `json:"song"`
        ReleaseDate string `json:"releaseDate"`
        Link        string `json:"link"`
        Text        string `json:"text"`
    }

    SongUpdate {
        Id          int64  `json:"id"`
        Group       string `json:"group"`
        Song        string `json:"song"`
        ReleaseDate string `json:"releaseDate"`
        Link        string `json:"link"`
        Text        string `json:"text"`
    }
)

service musicLibrary-api {
    @doc(
        summary: "Get a list of songs"
        description: Returns a list of songs with optional filtering by group name and song title. Supports pagination.
    )
    @handler ListSongsHandler
    get /songs/get(SongFilterRequest) returns (SongListResponse)

    @doc(
        summary: Get song verses text
        description: Returns the text of song verses with pagination.
    )
    @handler GetSongVersesHandler
    get /songs/verse/:id/:verse_id returns (SongVersesResponse)

    @doc(
        summary: Add a new song
        description: Adds a new song with the specified group name and song title. Queries an external API for additional information.
    )
    @handler AddSongHandler
    post /songs/create(AddSongRequest) returns (SongActionResponse)

    @doc(
        summary: Update song data
        description: Updates the information of a song by its ID.
    )
    @handler UpdateSongHandler
    put /songs/update/:id(SongUpdate) returns (SongActionResponse)

    @doc(
        summary: Delete a song
        description: Deletes a song from the library by its ID.
    )
    @handler DeleteSongHandler
    delete /songs/delete/:id returns (SongActionResponse)
}
